# Generated by Django 5.2.5 on 2025-08-10 09:31

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_code', models.CharField(max_length=20)),
                ('branch_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='ChannelUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Channels Used',
            },
        ),
        migrations.CreateModel(
            name='CustomerCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Customer Categories',
            },
        ),
        migrations.CreateModel(
            name='DataUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('month_year', models.DateField()),
                ('data_type', models.CharField(choices=[('CUSTOMER', 'Customer Data'), ('TRANSACTION', 'Transaction Data')], max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('records_uploaded', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PARTIAL', 'Partial')], max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Data Upload Logs',
            },
        ),
        migrations.CreateModel(
            name='GeographicalLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Geographical Locations',
            },
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument_type_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Instrument Types',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Service Types',
            },
        ),
        migrations.CreateModel(
            name='TransactionRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('range_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Transaction Ranges',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Transaction Types',
            },
        ),
        migrations.CreateModel(
            name='TotalUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=10)),
                ('count', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='TotalTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year', models.DateField()),
                ('number_of_transactions', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel_used', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.channelused')),
                ('form_of_instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.instrumenttype')),
                ('geographical_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.geographicallocation')),
                ('transaction_range', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.transactionrange')),
                ('type_of_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.transactiontype')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], max_length=20)),
                ('number_of_customers', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('month_year', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.branch')),
                ('customer_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customercategory')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.servicetype')),
            ],
            options={
                'verbose_name_plural': 'Customer Data',
                'unique_together': {('branch_code', 'customer_category', 'service_type', 'status', 'month_year')},
            },
        ),
        migrations.CreateModel(
            name='TransactionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year', models.DateField()),
                ('range_of_transactions', models.CharField(max_length=100)),
                ('number_of_transactions', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel_used', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.channelused')),
                ('form_of_instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.instrumenttype')),
                ('geographical_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.geographicallocation')),
                ('type_of_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.transactiontype')),
            ],
            options={
                'verbose_name_plural': 'Transaction Data',
                'unique_together': {('month_year', 'range_of_transactions', 'form_of_instrument', 'type_of_transaction', 'geographical_location', 'channel_used')},
            },
        ),
    ]
